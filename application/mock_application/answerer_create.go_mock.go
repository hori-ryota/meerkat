// Code generated by MockGen. DO NOT EDIT.
// Source: answerer_create.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/opensaasstudio/meerkat/domain"
	reflect "reflect"
)

// MockAnswererIDProvider is a mock of AnswererIDProvider interface
type MockAnswererIDProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAnswererIDProviderMockRecorder
}

// MockAnswererIDProviderMockRecorder is the mock recorder for MockAnswererIDProvider
type MockAnswererIDProviderMockRecorder struct {
	mock *MockAnswererIDProvider
}

// NewMockAnswererIDProvider creates a new mock instance
func NewMockAnswererIDProvider(ctrl *gomock.Controller) *MockAnswererIDProvider {
	mock := &MockAnswererIDProvider{ctrl: ctrl}
	mock.recorder = &MockAnswererIDProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAnswererIDProvider) EXPECT() *MockAnswererIDProviderMockRecorder {
	return m.recorder
}

// NewAnswererID mocks base method
func (m *MockAnswererIDProvider) NewAnswererID() domain.AnswererID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewAnswererID")
	ret0, _ := ret[0].(domain.AnswererID)
	return ret0
}

// NewAnswererID indicates an expected call of NewAnswererID
func (mr *MockAnswererIDProviderMockRecorder) NewAnswererID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewAnswererID", reflect.TypeOf((*MockAnswererIDProvider)(nil).NewAnswererID))
}
