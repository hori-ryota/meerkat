// Code generated by MockGen. DO NOT EDIT.
// Source: answer.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/opensaasstudio/meerkat/domain"
	reflect "reflect"
)

// MockAnswerIDProvider is a mock of AnswerIDProvider interface
type MockAnswerIDProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAnswerIDProviderMockRecorder
}

// MockAnswerIDProviderMockRecorder is the mock recorder for MockAnswerIDProvider
type MockAnswerIDProviderMockRecorder struct {
	mock *MockAnswerIDProvider
}

// NewMockAnswerIDProvider creates a new mock instance
func NewMockAnswerIDProvider(ctrl *gomock.Controller) *MockAnswerIDProvider {
	mock := &MockAnswerIDProvider{ctrl: ctrl}
	mock.recorder = &MockAnswerIDProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAnswerIDProvider) EXPECT() *MockAnswerIDProviderMockRecorder {
	return m.recorder
}

// NewAnswerID mocks base method
func (m *MockAnswerIDProvider) NewAnswerID() domain.AnswerID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewAnswerID")
	ret0, _ := ret[0].(domain.AnswerID)
	return ret0
}

// NewAnswerID indicates an expected call of NewAnswerID
func (mr *MockAnswerIDProviderMockRecorder) NewAnswerID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewAnswerID", reflect.TypeOf((*MockAnswerIDProvider)(nil).NewAnswerID))
}
