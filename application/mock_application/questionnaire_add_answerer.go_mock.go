// Code generated by MockGen. DO NOT EDIT.
// Source: questionnaire_add_answerer.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/opensaasstudio/meerkat/domain"
	reflect "reflect"
)

// MockNotificationTargetIDProvider is a mock of NotificationTargetIDProvider interface
type MockNotificationTargetIDProvider struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationTargetIDProviderMockRecorder
}

// MockNotificationTargetIDProviderMockRecorder is the mock recorder for MockNotificationTargetIDProvider
type MockNotificationTargetIDProviderMockRecorder struct {
	mock *MockNotificationTargetIDProvider
}

// NewMockNotificationTargetIDProvider creates a new mock instance
func NewMockNotificationTargetIDProvider(ctrl *gomock.Controller) *MockNotificationTargetIDProvider {
	mock := &MockNotificationTargetIDProvider{ctrl: ctrl}
	mock.recorder = &MockNotificationTargetIDProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNotificationTargetIDProvider) EXPECT() *MockNotificationTargetIDProviderMockRecorder {
	return m.recorder
}

// NewNotificationTargetID mocks base method
func (m *MockNotificationTargetIDProvider) NewNotificationTargetID() domain.NotificationTargetID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewNotificationTargetID")
	ret0, _ := ret[0].(domain.NotificationTargetID)
	return ret0
}

// NewNotificationTargetID indicates an expected call of NewNotificationTargetID
func (mr *MockNotificationTargetIDProviderMockRecorder) NewNotificationTargetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewNotificationTargetID", reflect.TypeOf((*MockNotificationTargetIDProvider)(nil).NewNotificationTargetID))
}
