// Code generated by go-genaccessor; DO NOT EDIT.

package application

import (
	"github.com/opensaasstudio/meerkat/domain"
)

func (m AnswerInputValue) QuestionID() domain.QuestionID {
	return m.questionID
}

func (m AnswerInputValue) Value() string {
	return m.value
}

func (m AnsweringUsecaseInput) QuestionnaireID() domain.QuestionnaireID {
	return m.questionnaireID
}

func (m AnsweringUsecaseInput) AnswererID() domain.AnswererID {
	return m.answererID
}

func (m AnsweringUsecaseInput) Answers() []AnswerInputValue {
	return m.answers
}

func (m CreatingAnswererUsecaseInput) Name() string {
	return m.name
}

func (m AddingAnswererUsecaseInput) NotificationTarget() domain.NotificationTarget {
	return m.notificationTarget
}

func (m QuestionItem) Question() Question {
	return m.question
}

func (m QuestionItem) Required() bool {
	return m.required
}

func (m Question) ID() domain.QuestionID {
	return m.id
}

func (m *Question) SetID(s domain.QuestionID) {
	m.id = s
}

func (m Question) Text() string {
	return m.text
}

func (m CreatingQuestionnaireUsecaseInput) Title() string {
	return m.title
}

func (m CreatingQuestionnaireUsecaseInput) QuestionItems() []QuestionItem {
	return m.questionItems
}

func (m CreatingQuestionnaireUsecaseInput) Schedule() domain.Schedule {
	return m.schedule
}

func (m *CreatingQuestionnaireUsecaseInput) SetSchedule(s domain.Schedule) {
	m.schedule = s
}

func (m CreatingQuestionnaireUsecaseInput) PostTargets() []domain.PostTarget {
	return m.postTargets
}

func (m *CreatingQuestionnaireUsecaseInput) SetPostTargets(s []domain.PostTarget) {
	m.postTargets = s
}

func (m RemovingAnswererUsecaseInput) QuestionnaireID() domain.QuestionnaireID {
	return m.questionnaireID
}

func (m RemovingAnswererUsecaseInput) AnswererID() domain.AnswererID {
	return m.answererID
}

func (m OverwritingQuestionnaireTitleUsecaseInput) QuestionnaireID() domain.QuestionnaireID {
	return m.questionnaireID
}

func (m OverwritingQuestionnaireTitleUsecaseInput) Title() string {
	return m.title
}

func (m ReplacingQuestionsUsecaseInput) QuestionnaireID() domain.QuestionnaireID {
	return m.questionnaireID
}

func (m ReplacingQuestionsUsecaseInput) QuestionItems() []QuestionItem {
	return m.questionItems
}

func (m UpdatingQuestionnaireUsecaseInput) QuestionnaireID() domain.QuestionnaireID {
	return m.questionnaireID
}

func (m UpdatingQuestionnaireUsecaseInput) CreatingInput() CreatingQuestionnaireUsecaseInput {
	return m.creatingInput
}
